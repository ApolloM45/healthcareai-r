% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/random-forest-development.R
\docType{class}
\name{RandomForestDevelopment}
\alias{RandomForestDevelopment}
\title{Compare predictive models, created on your data}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
RandomForestDevelopment
}
\arguments{
\item{object}{of SuperviseModelParameters class for $new() constructor}

\item{type}{The type of model (either 'regression' or 'classification')}

\item{df}{Dataframe whose columns are used for calc.}

\item{grainCol}{The dataframe's column that has IDs pertaining to the grain}

\item{predictedCol}{Column that you want to predict.}

\item{impute}{Set all-column imputation to F or T.
This uses mean replacement for numeric columns
and most frequent for factorized columns.
F leads to removal of rows containing NULLs.}

\item{debug}{Provides the user extended output to the console, in order
to monitor the calculations throughout. Use T or F.}
}
\description{
This step allows you to create a random forest model, based on
your data.
}
\examples{

#### Example using iris dataset ####
ptm <- proc.time()
library(HCRTools)

data(iris)
head(iris)

set.seed(42)

p <- SupervisedModelDevelopmentParams$new()
p$df = iris
p$type = 'regression'
p$impute = TRUE
p$grainCol = ''
p$predictedCol = 'Sepal.Width'
p$debug = FALSE
p$cores = 1

# Run Lasso
lasso <- LassoDevelopment$new(p)
lasso$run()

# Run RandomForest
rf <- RandomForestDevelopment$new(p)
rf$run()

print(proc.time() - ptm)

#### Example using csv data ####
library(HCRTools)
#setwd("C:/Your/script/location") # Needed if using YOUR CSV file
ptm <- proc.time()

# Can delete this line in your work
csvfile <- system.file("extdata", "HREmployeeDev.csv", package = "HCRTools")

df <- read.csv(file = csvfile, #<-- Replace with 'your/path'
                    header = TRUE,
                    na.strings =  c('NULL', 'NA', ""))

head(df)

set.seed(42)

p <- SupervisedModelDevelopmentParams$new()
p$df = df
p$type = 'classification'
p$impute = FALSE
p$grainCol = ''
p$predictedCol = 'SalariedFlag'
p$debug = FALSE
p$cores = 1

# Run Lasso
lasso <- LassoDevelopment$new(p)
lasso$run()

# Run RandomForest
rf <- RandomForestDevelopment$new(p)
rf$run()

# For a given true-positive rate, get false-pos rate and 0/1 cutoff
rf$getCutOffs(tpr=0.8)
print(proc.time() - ptm)


#### Example using SQL Server data ####
# This example requires:
#    1) That your local SQL Server has AdventureWorks2012 installed

ptm <- proc.time()
library(HCRTools)

connection.string = "
driver={SQL Server};
server=localhost;
trusted_connection=true
"

query = "
SELECT
 [OrganizationLevel]
,[MaritalStatus]
,[Gender]
,IIF([SalariedFlag]=0,'N','Y') AS SalariedFlag
,[VacationHours]
,[SickLeaveHours]
FROM [AdventureWorks2012].[HumanResources].[Employee]
"

df <- selectData(connection.string, query)
head(df)

set.seed(42)

p <- SupervisedModelDevelopmentParams$new()
p$df = df
p$type = 'classification'
p$impute = TRUE
p$grainCol = ''
p$predictedCol = 'SalariedFlag'
p$debug = FALSE
p$cores = 1

# Run Lasso
lasso <- LassoDevelopment$new(p)
lasso$run()

# Run RandomForest
rf <- RandomForestDevelopment$new(p)
rf$run()

# Plot ROCs from both supervised model classes
plot(lasso$getROC(), col = "blue", legacy.axes=TRUE, mar=c(4, 4, 3, 2)+.1)
par(new=TRUE)
plot(rf$getROC(), col = "red", legacy.axes=TRUE, mar=c(4, 4, 3, 2)+.1)
title(main = "ROC")
legend("bottomright",
       c("Lasso","RandomForest"),
       cex = 0.8,
       col = c("blue","red"),
       lty = 1,
       inset = .1)

print(proc.time() - ptm)

}
\references{
\url{http://healthcareml.org/}
}
\seealso{
\code{\link{LassoDevelopment}}

\code{\link{LinearMixedModelDevelopment}}

\code{\link{HCRTools}}
}
\keyword{datasets}

